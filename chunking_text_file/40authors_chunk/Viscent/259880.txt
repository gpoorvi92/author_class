				};
				Future<?> result = threadPool.submit(taskB);
				
				try {
					// 等待TaskB执行结束才能继续执行TaskA，使TaskA和TaskB称为由依赖关系的两个任务
					result.get();
				} catch (InterruptedException e) {
					;
				} catch (ExecutionException e) {
					e.printStackTrace();
